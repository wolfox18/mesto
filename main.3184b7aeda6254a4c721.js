(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this._selector=n,this._handleCardClick=r.handleCardClick,this._handleDeleteClick=r.handleDeleteClick,this._changeLike=r.changeLike,this._userId=o,this._isOwn=e.owner._id===o,this.isLiked=this._data.likes.some((function(e){return e._id===i._userId}))}var n,r;return n=t,(r=[{key:"_generateTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0)}},{key:"_handleLike",value:function(){var e=this;this._changeLike(this._data,this.isLiked,(function(t){e._data.likes=t,e.isLiked?e._likeButtonElement.classList.remove("element__like_active"):e._likeButtonElement.classList.add("element__like_active"),e.isLiked=!e.isLiked,e._likeCounter.textContent=e._data.likes.length}))}},{key:"_addLikeListener",value:function(){var e=this;this._likeButtonElement.addEventListener("click",(function(){e._handleLike()}))}},{key:"_setDeleteListener",value:function(){var e=this,t=this._cardElement.querySelector(".element__delete-button");this._isOwn?t.addEventListener("click",(function(){e._handleDeleteClick(e._cardElement,e._data._id)})):t.style.display="none"}},{key:"_setPreviewListener",value:function(){var e=this;this._imageElement.addEventListener("click",(function(){e._handleCardClick({name:e._data.name,imageUrl:e._data.link})}))}},{key:"_setEventListeners",value:function(){this._addLikeListener(),this._setDeleteListener(),this._setPreviewListener()}},{key:"generateCard",value:function(){return this._cardElement=this._generateTemplate(),this._likeButtonElement=this._cardElement.querySelector(".element__like"),this._likeCounter=this._cardElement.querySelector(".element__like-counter"),this._imageElement=this._cardElement.querySelector(".element__image"),this._imageElement.src=this._data.link,this._imageElement.alt=this._data.name,this._cardElement.querySelector(".element__title").textContent=this._data.name,this._likeCounter.textContent=this._data.likes.length,this.isLiked&&this._likeButtonElement.classList.add("element__like_active"),this._setEventListeners(),this._cardElement}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._inputList=Array.from(this._formElement.querySelectorAll(t.inputSelector)),this._buttonElement=this._formElement.querySelector(t.submitButtonSelector)}var t,r;return t=e,(r=[{key:"_checkValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t}},{key:"_hideInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),n.textContent=""}},{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"_setEventListners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListners()}},{key:"resetValidation",value:function(){this._toggleButtonState()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"_clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this._clear(),this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e,t){t?this._container.prepend(e):this._container.append(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(e){"Escape"===e.code&&i.close()},(r="_handleEscClose")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._element=document.querySelector(n),this._openedClass=t.openedClass,this._closeButton=this._element.querySelector(t.closeButtonSelector)}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add(this._openedClass),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._element.classList.remove(this._openedClass),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleCloseByClick",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this.close.bind(this)),this._element.addEventListener("mousedown",this._handleCloseByClick.bind(this))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},s.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function h(e,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},h(e,t)}function p(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,t))._formElement=r._element.querySelector(e.formSelector),r._inputList=Array.from(r._formElement.querySelectorAll(e.inputSelector)),r._handleFormSubmit=n.handleFormSubmit,r._submitButton=r._formElement.querySelector(e.submitButtonSelector),r._initialSubmitText=r._submitButton.textContent,r}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputData={},this._inputList.forEach((function(t){e._inputData[t.name]=t.value})),this._inputData}},{key:"setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues(),(function(t){e._submitButton.textContent=t?"Сохранение...":e._initialSubmitText})),e.close()})),s(d(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){s(d(a.prototype),"close",this).call(this),this._formElement.reset()}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=v(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function k(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e,t))._nameElement=n._element.querySelector(e.nameSelector),n._imageElement=n._element.querySelector(e.imageSelector),n}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.imageUrl;this._nameElement.textContent=t,this._imageElement.alt=t,this._imageElement.src=n,b(g(a.prototype),"open",this).call(this)}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(t.nameSelector),this._bioElement=document.querySelector(t.bioSelector),this._avatarElement=document.querySelector(t.avatarSelector)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._bioElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._nameElement.textContent=t,this._bioElement.textContent=n,this._avatarElement.src=r}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),L={},C={openedClass:"popup_opened",closeButtonSelector:".popup__close-btn",inputSelector:".popup__input",formSelector:".popup__form",nameSelector:".popup__image-name",imageSelector:".popup__image",submitButtonSelector:".popup__save-btn"};function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){if(e.ok)return e.json();throw new Error("Ошибка внутри API!")}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(this._handleResponse)}},{key:"patchUserInfo",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"postNewCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}function x(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return A(e)}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function a(e,t){var n,r,o,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),c=function(e){e.preventDefault(),n._handleSubmit(),n.close()},(o="_setSubmitListener")in(r=A(n=i.call(this,e,t)))?Object.defineProperty(r,o,{value:c,enumerable:!0,configurable:!0,writable:!0}):r[o]=c,n._formElement=n._element.querySelector(e.formSelector),n}return t=a,(n=[{key:"open",value:function(e){R(D(a.prototype),"open",this).call(this),this._handleSubmit=e,this._formElement.addEventListener("submit",this._setSubmitListener)}},{key:"close",value:function(){this._formElement.removeEventListener("submit",this._setSubmitListener),R(D(a.prototype),"close",this).call(this)}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c),V=new j({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-48",headers:{authorization:"dc2c7972-8fda-44b9-92f6-abe481f1c75c","Content-Type":"application/json"}}),F=new O({nameSelector:".profile__name",bioSelector:".profile__description",avatarSelector:".profile__avatar"});V.getUserInfo().then((function(e){F.setUserInfo(e)})).catch((function(e){console.log("Ошибка API при загрузке данных пользователя!",e)}));var N=new _(C,".popup_type_profile",{handleFormSubmit:function(e,t){t(!0),V.patchUserInfo(e).then((function(e){F.setUserInfo(e)})).catch((function(e){console.log("Ошибка API при обновлении данных пользователя!",e)})).finally(t(!1))}});N.setEventListeners(),document.querySelector(".profile__edit-btn").addEventListener("click",(function(e){N.setInputValues(F.getUserInfo()),N.open()}));var H=new S(C,".popup_type_image");H.setEventListeners();var J=function(e){H.open(e)},M=new U(C,".popup_type_confirm");M.setEventListeners();var z=function(e){var n=new t(e,"#element-template",{handleCardClick:J,handleDeleteClick:function(e,t){M.open((function(){e.remove(),V.deleteCard(t)}))},changeLike:function(e,t,n){t?V.deleteLike(e._id).then((function(e){n(e.likes)})).catch((function(e){console.log("Ошибка API при удалении лайка!",e)})):V.addLike(e._id).then((function(e){n(e.likes)})).catch((function(e){console.log("Ошибка API при установке лайка!",e)}))}},"9d0db56c218a92f4247448d8");return n.generateCard()},G=new i({items:{},renderer:function(e){G.addItem(z(e))}},".elements__list");V.getInitialCards().then((function(e){e.forEach((function(e){return G.addItem(z(e),!1)}))})).catch((function(e){console.log("Ошибка API при загрузке карточек!",e)}));var K=new _(C,".popup_type_new-element",{handleFormSubmit:function(e,t){t(!0),V.postNewCard(e).then((function(e){console.log("Новая карточка ",e),G.addItem(z(e),!0)})).catch((function(e){console.log("Ошибка API при загрузке карточек!",e)})).finally(t(!1))}});K.setEventListeners(),document.querySelector(".profile__post-add").addEventListener("click",(function(e){L["card-form"].resetValidation(),K.open()}));var Q,W=document.querySelector(".profile__avatar"),X=new _(C,".popup_type_change-avatar",{handleFormSubmit:function(e,t){t(!0),V.changeAvatar(e.link).then((function(){W.src=e.link})).catch((function(e){console.log("Ошибка API при обновлении аватара!",e)})).finally(t(!1))}});X.setEventListeners(),document.querySelector(".profile__change-avatar").addEventListener("click",(function(e){X.open()})),Q={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"button_inactive",inputErrorClass:"popup__input_type_error"},Array.from(document.querySelectorAll(Q.formSelector)).forEach((function(e){var t=new r(Q,e),n=e.getAttribute("name");L[n]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,