(()=>{"use strict";var e={},t={openedClass:"popup_opened",closeButtonSelector:".popup__close-btn",inputSelector:".popup__input",formSelector:".popup__form",nameSelector:".popup__image-name",imageSelector:".popup__image"};function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._imageUrl=t.link,this._name=t.name,this._likes=t.likes,this._selector=n,this._isOwn=t.owner._id===o,this._id=t._id,this._userId=o,this._handleCardClick=r.handleCardClick,this._handleDeleteClick=r.handleDeleteClick,this._changeLike=r.changeLikes}var t,r;return t=e,(r=[{key:"_generateTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0)}},{key:"_isLikedByUser",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"_addLikeListener",value:function(){var e=this;this._isLiked=this._isLikedByUser(),this._isLiked&&this._likeButtonElement.classList.add("element__like_active"),this._likeButtonElement.addEventListener("click",(function(){e._isLiked?(e._likeButtonElement.classList.remove("element__like_active"),e._likeCounter.textContent=e._changeLike(e._id,"remove"),e._isLiked=!1):(e._likeButtonElement.classList.add("element__like_active"),e._likeCounter.textContent=e._changeLike(e._id,"add"),e._isLiked=!0)})),console.log(this._name," - лайкнута = ",this._isLiked)}},{key:"_setDeleteListener",value:function(){var e=this,t=this._cardElement.querySelector(".element__delete-button");this._isOwn?t.addEventListener("click",(function(){e._handleDeleteClick(e._cardElement,e._id)})):t.style.display="none"}},{key:"_setPreviewListener",value:function(){var e=this;this._imageElement.addEventListener("click",(function(){e._handleCardClick({name:e._name,imageUrl:e._imageUrl})}))}},{key:"_setEventListeners",value:function(){this._addLikeListener(),this._setDeleteListener(),this._setPreviewListener()}},{key:"generateCard",value:function(){return this._cardElement=this._generateTemplate(),this._likeButtonElement=this._cardElement.querySelector(".element__like"),this._likeCounter=this._cardElement.querySelector(".element__like-counter"),this._imageElement=this._cardElement.querySelector(".element__image"),this._imageElement.src=this._imageUrl,this._imageElement.alt=this._name,this._cardElement.querySelector(".element__title").textContent=this._name,this._likeCounter.textContent=this._likes.length,this._setEventListeners(),this._cardElement}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._inputList=Array.from(this._formElement.querySelectorAll(t.inputSelector)),this._buttonElement=this._formElement.querySelector(t.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_checkValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t}},{key:"_hideInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),n.textContent=""}},{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"_setEventListners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListners()}},{key:"resetValidation",value:function(){this._toggleButtonState()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"_clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this._clear(),this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e,t){t?this._container.prepend(e):this._container.append(e)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t,n){var r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(e){"Escape"===e.code&&i.close()},(r="_handleEscClose")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._element=document.querySelector(n),this._openedClass=t.openedClass,this._closeButton=this._element.querySelector(t.closeButtonSelector)}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add(this._openedClass),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._element.classList.remove(this._openedClass),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleCloseByClick",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this.close.bind(this)),this._element.addEventListener("mousedown",this._handleCloseByClick.bind(this))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function _(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,t))._formElement=r._element.querySelector(e.formSelector),r._inputList=Array.from(r._formElement.querySelectorAll(e.inputSelector)),r._handleFormSubmit=n.handleFormSubmit,r}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputData={},this._inputList.forEach((function(t){e._inputData[t.name]=t.value})),this._inputData}},{key:"setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()})),h(y(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){h(y(a.prototype),"close",this).call(this),this._formElement.reset()}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function w(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e,t))._nameElement=n._element.querySelector(e.nameSelector),n._imageElement=n._element.querySelector(e.imageSelector),n}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.imageUrl;this._nameElement.textContent=t,this._imageElement.alt=t,this._imageElement.src=n,E(S(a.prototype),"open",this).call(this)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(t.nameSelector),this._bioElement=document.querySelector(t.bioSelector),this._avatarElement=document.querySelector(t.avatarSelector)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._bioElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._nameElement.textContent=t,this._bioElement.textContent=n,this._avatarElement.src=r}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){if(e.ok)return e.json();throw new Error("Ошибка внутри API!")}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(this._handleResponse)}},{key:"patchUserInfo",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"postNewCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}function D(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return U(e)}function U(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return D(this,e)});function a(e,t){var n,r,o,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),l=function(e){e.preventDefault(),n._handleSubmit(),n.close()},(o="_setSubmitListener")in(r=U(n=i.call(this,e,t)))?Object.defineProperty(r,o,{value:l,enumerable:!0,configurable:!0,writable:!0}):r[o]=l,n._formElement=n._element.querySelector(e.formSelector),n}return t=a,(n=[{key:"open",value:function(e){B(x(a.prototype),"open",this).call(this),this._handleSubmit=e,this._formElement.addEventListener("submit",this._setSubmitListener)}},{key:"close",value:function(){this._formElement.removeEventListener("submit",this._setSubmitListener),B(x(a.prototype),"close",this).call(this)}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s),V=new j({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-48",headers:{authorization:"dc2c7972-8fda-44b9-92f6-abe481f1c75c","Content-Type":"application/json"}}),F=new C({nameSelector:".profile__name",bioSelector:".profile__description",avatarSelector:".profile__avatar"});V.getUserInfo().then((function(e){console.log(e),F.setUserInfo(e)})).catch((function(e){console.log("Ошибка API при загрузке данных пользователя!",e)}));var N=new m(t,".popup_type_profile",{handleFormSubmit:function(e){V.patchUserInfo(e).then((function(e){F.setUserInfo(e)})).catch((function(e){console.log("Ошибка API при обновлении данных пользователя!",e)}))}});N.setEventListeners(),document.querySelector(".profile__edit-btn").addEventListener("click",(function(e){N.setInputValues(F.getUserInfo()),N.open()}));var H=new O(t,".popup_type_image");H.setEventListeners();var J=function(e){H.open(e)},M=new A(t,".popup_type_confirm");M.setEventListeners();var z=function(e){var t=new r(e,"#element-template",{handleCardClick:J,handleDeleteClick:function(e,t){M.open((function(){e.remove(),console.log("Типа удаление карточки №",t),V.deleteCard(t)}))},changeLikes:function(e,t){"add"===t?V.addLike(e).then((function(e){return e.likes.length})).catch((function(e){console.log("Ошибка API при установке лайка!",e)})):V.deleteLike(e).then((function(e){return e.likes.length})).catch((function(e){console.log("Ошибка API при удалении лайка!",e)}))}},"9d0db56c218a92f4247448d8");return t.generateCard()},G=new l({items:{},renderer:function(e){G.addItem(z(e))}},".elements__list");V.getInitialCards().then((function(e){console.log("Первоначальные карточки ",e),e.forEach((function(e){return G.addItem(z(e),!1)}))})).catch((function(e){console.log("Ошибка API при загрузке карточек!",e)}));var K,Q=new m(t,".popup_type_new-element",{handleFormSubmit:function(e){console.log(e),V.postNewCard(e).then((function(e){console.log("Новая карточка ",e),G.addItem(z(e),!0)})).catch((function(e){console.log("Ошибка API при загрузке карточек!",e)}))}});Q.setEventListeners(),document.querySelector(".profile__post-add").addEventListener("click",(function(t){e["card-form"].resetValidation(),Q.open()})),K={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"button_inactive",inputErrorClass:"popup__input_type_error"},Array.from(document.querySelectorAll(K.formSelector)).forEach((function(t){var n=new i(K,t),r=t.getAttribute("name");e[r]=n,n.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,